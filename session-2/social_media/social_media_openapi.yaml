openapi: 3.0.1
info:
  title: Social Media
  version: 0.1.0
servers:
- url: "{server}:{port}/social-media"
  variables:
    server:
      default: http://localhost
    port:
      default: "9095"
paths:
  /users:
    get:
      operationId: getUsers
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
    post:
      operationId: postUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
        required: true
      responses:
        "201":
          description: Created
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /users/{id}:
    get:
      operationId: getUsersId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /users/{id}/posts:
    post:
      operationId: postUsersIdPosts
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPost'
        required: true
      responses:
        "201":
          description: Created
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
components:
  schemas:
    Date:
      type: object
      description: Date in proleptic Gregorian calendar.
      allOf:
      - $ref: '#/components/schemas/DateFields'
      - $ref: '#/components/schemas/OptionalTimeOfDayFields'
      - type: object
        properties:
          utcOffset:
            $ref: '#/components/schemas/ZoneOffset'
    DateFields:
      required:
      - day
      - month
      - year
      type: object
      properties:
        year:
          type: integer
          format: int64
        month:
          type: integer
          format: int64
        day:
          type: integer
          format: int64
      description: Fields of the Date record.
    ErrorDetails:
      required:
      - detail
      - message
      - timestamp
      type: object
      properties:
        message:
          type: string
        detail:
          type: string
        timestamp:
          $ref: '#/components/schemas/Utc'
    ErrorPayload:
      required:
      - message
      - method
      - path
      - reason
      - status
      - timestamp
      type: object
      properties:
        timestamp:
          type: string
        status:
          type: integer
          format: int64
        reason:
          type: string
        message:
          type: string
        path:
          type: string
        method:
          type: string
    NewPost:
      required:
      - category
      - description
      - tags
      type: object
      properties:
        description:
          type: string
        tags:
          type: string
        category:
          type: string
      additionalProperties: false
    NewUser:
      required:
      - birthDate
      - mobileNumber
      - name
      type: object
      properties:
        name:
          type: string
        birthDate:
          $ref: '#/components/schemas/Date'
        mobileNumber:
          type: string
      additionalProperties: false
    OptionalTimeOfDayFields:
      type: object
      properties:
        hour:
          type: integer
          format: int64
        minute:
          type: integer
          format: int64
        second:
          $ref: '#/components/schemas/Seconds'
      description: TimeOfDay with all the fields beign optional.
    Seconds:
      type: number
      description: Holds the seconds as a decimal value.
      format: double
    User:
      required:
      - birthDate
      - id
      - mobileNumber
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        birthDate:
          $ref: '#/components/schemas/Date'
        mobileNumber:
          type: string
      additionalProperties: false
    Utc:
      type: array
      items:
        oneOf:
        - type: integer
          format: int64
        - type: number
          format: double
    ZoneOffset:
      required:
      - hours
      type: object
      properties:
        hours:
          type: integer
          format: int64
        minutes:
          type: integer
          format: int64
        seconds:
          type: number
          description: |-
            IETF zone files have historical zones that are offset by
            integer seconds; we use Seconds type so that this is a subtype
            of Delta
          format: double
      additionalProperties: false
