diff --git a/session-3/backend/reviewed/Ballerina.toml b/session-3/backend/reviewed/Ballerina.toml
index abc5853..246a7b9 100644
--- a/session-3/backend/reviewed/Ballerina.toml
+++ b/session-3/backend/reviewed/Ballerina.toml
@@ -14,7 +14,7 @@ artifactId = "persist.sql-native"
 version = "1.2.1"
 
 [[dependency]]
-org = "maryamzi"
-name = "city_data_client"
+org = "maryam"
+name = "city_data"
 version = "0.1.0"
 repository = "local"
diff --git a/session-3/backend/reviewed/Dependencies.toml b/session-3/backend/reviewed/Dependencies.toml
index 135c2f1..859cc28 100644
--- a/session-3/backend/reviewed/Dependencies.toml
+++ b/session-3/backend/reviewed/Dependencies.toml
@@ -437,6 +437,20 @@ modules = [
 	{org = "ballerinax", packageName = "persist.sql", moduleName = "persist.sql"}
 ]
 
+[[package]]
+org = "maryam"
+name = "city_data"
+version = "0.1.0"
+dependencies = [
+	{org = "ballerina", name = "http"},
+	{org = "ballerina", name = "io"},
+	{org = "ballerina", name = "url"},
+	{org = "ballerinai", name = "observe"}
+]
+modules = [
+	{org = "maryam", packageName = "city_data", moduleName = "city_data"}
+]
+
 [[package]]
 org = "maryam"
 name = "reviewed"
@@ -454,7 +468,7 @@ dependencies = [
 	{org = "ballerinax", name = "mysql"},
 	{org = "ballerinax", name = "mysql.driver"},
 	{org = "ballerinax", name = "persist.sql"},
-	{org = "maryamzi", name = "city_data_client"},
+	{org = "maryam", name = "city_data"},
 	{org = "xlibb", name = "pubsub"}
 ]
 modules = [
@@ -462,18 +476,6 @@ modules = [
 	{org = "maryam", packageName = "reviewed", moduleName = "reviewed.db"}
 ]
 
-[[package]]
-org = "maryamzi"
-name = "city_data_client"
-version = "0.1.0"
-dependencies = [
-	{org = "ballerina", name = "http"},
-	{org = "ballerinai", name = "observe"}
-]
-modules = [
-	{org = "maryamzi", packageName = "city_data_client", moduleName = "city_data_client"}
-]
-
 [[package]]
 org = "xlibb"
 name = "pipe"
diff --git a/session-3/backend/reviewed/service.bal b/session-3/backend/reviewed/service.bal
index 3fd721d..1fa64dc 100644
--- a/session-3/backend/reviewed/service.bal
+++ b/session-3/backend/reviewed/service.bal
@@ -8,7 +8,7 @@ import ballerina/log;
 
 import xlibb/pubsub;
 
-import maryamzi/city_data_client;
+import maryam/city_data;
 
 const USER_ID = "userId";
 
@@ -26,9 +26,9 @@ function init() returns error? {
     }
 }
 
-final city_data_client:Client geoClient = check getGeoClient();
+final city_data:Client geoClient = check getGeoClient();
 
-function getGeoClient() returns city_data_client:Client|error => new ();
+function getGeoClient() returns city_data:Client|error => new ();
 
 final db:Client db = check new;
 
@@ -107,7 +107,10 @@ type CityDataResultsItem record {
 
 isolated function getCityData(string city, string country) returns CityDataResultsItem|error {
     log:printInfo("Retrieving city data", city = city, country = country);
-    return geoClient->getCityData(city, country);
+    city_data:CityData cityData = check geoClient->/geonames\-all\-cities\-with\-a\-population\-500/records(
+        refine = [string `name:${city}`, string `country:${country}`]
+    );
+    return cityData.results[0];
 }
 
 type Place distinct service object {
diff --git a/session-3/backend/reviewed/tests/tests.bal b/session-3/backend/reviewed/tests/tests.bal
index f418cc7..fc83b23 100644
--- a/session-3/backend/reviewed/tests/tests.bal
+++ b/session-3/backend/reviewed/tests/tests.bal
@@ -1,7 +1,7 @@
 import ballerina/graphql;
 import ballerina/test;
 
-import maryamzi/city_data_client;
+import maryam/city_data;
 
 final graphql:Client cl = check new ("https://localhost:9000/reviewed",
     secureSocket = {
@@ -12,7 +12,7 @@ final graphql:Client cl = check new ("https://localhost:9000/reviewed",
 @test:Mock {
     functionName: "getGeoClient"
 }
-function getMockClient() returns city_data_client:Client => test:mock(city_data_client:Client);
+function getMockClient() returns city_data:Client => test:mock(city_data:Client);
 
 @test:Config
 function testRetrievingBasicPlaceData() returns error? {
@@ -49,7 +49,7 @@ type CityDataWithPopulationAndTimeZone record {|
 
 @test:Config
 function testRetrievingPlaceDataWithCityData() returns error? {
-    city_data_client:CityDataResultsItem cityData = {
+    city_data:ResultsItem cityData = {
         population: 450000,
         timezone: "America/New_York",
         admin1_code: "",
@@ -74,9 +74,10 @@ function testRetrievingPlaceDataWithCityData() returns error? {
     };
 
     test:prepare(geoClient)
-        .when("getCityData")
-        .withArguments("Miami", "United States")
-        .thenReturn(cityData);
+        .whenResource("geonames-all-cities-with-a-population-500/records")
+        .withArguments(<map<string|string[]>> {}, 
+                       <city_data:GetGeonamesAllCitiesWithAPopulation500RecordsQueries> {refine: ["name:Miami", "country:United States"]})
+        .thenReturn(<city_data:CityData> {total_count: 1, results: [cityData]});
 
     json payload = check cl->execute(string `query QueryPlace($placeId: ID!) {
         place(placeId: $placeId) {
